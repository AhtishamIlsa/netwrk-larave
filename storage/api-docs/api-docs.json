{
    "openapi": "3.0.0",
    "info": {
        "title": "Netwrk API Documentation",
        "description": "API documentation for Netwrk platform - User registration and management",
        "contact": {
            "email": "support@netwrk.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "Local development server"
        },
        {
            "url": ""
        }
    ],
    "paths": {
        "/admins/dashboard/stats": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get admin dashboard statistics",
                "operationId": "a6b1d889051df39808b2b7f995bb7cb2",
                "responses": {
                    "200": {
                        "description": "Dashboard statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dashboard statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "totalUsers": {
                                                    "type": "integer",
                                                    "example": 1250
                                                },
                                                "totalContacts": {
                                                    "type": "integer",
                                                    "example": 15600
                                                },
                                                "totalGroups": {
                                                    "type": "integer",
                                                    "example": 340
                                                },
                                                "activeUsers": {
                                                    "type": "integer",
                                                    "example": 1180
                                                },
                                                "newUsersThisMonth": {
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "totalReferrals": {
                                                    "type": "integer",
                                                    "example": 890
                                                },
                                                "platformGrowth": {
                                                    "properties": {
                                                        "users": {
                                                            "type": "integer",
                                                            "example": 12
                                                        },
                                                        "contacts": {
                                                            "type": "integer",
                                                            "example": 8
                                                        },
                                                        "groups": {
                                                            "type": "integer",
                                                            "example": 15
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admins/dashboard/topUsers": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get top users for admin dashboard",
                "operationId": "1c3f6f98ef4a05e10e944fc2040bb247",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of top users to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time period for ranking (week, month, year)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "month",
                            "enum": [
                                "week",
                                "month",
                                "year"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Top users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Top users retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "uuid"
                                                    },
                                                    "firstName": {
                                                        "type": "string",
                                                        "example": "John"
                                                    },
                                                    "lastName": {
                                                        "type": "string",
                                                        "example": "Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    },
                                                    "avatar": {
                                                        "type": "string",
                                                        "example": "https://example.com/avatar.jpg"
                                                    },
                                                    "contactsCount": {
                                                        "type": "integer",
                                                        "example": 150
                                                    },
                                                    "groupsCount": {
                                                        "type": "integer",
                                                        "example": 12
                                                    },
                                                    "referralsCount": {
                                                        "type": "integer",
                                                        "example": 8
                                                    },
                                                    "lastActive": {
                                                        "type": "string",
                                                        "example": "2024-01-15T10:30:00Z"
                                                    },
                                                    "joinedAt": {
                                                        "type": "string",
                                                        "example": "2024-01-01T00:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admins/dashboard/topGroups": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get top groups for admin dashboard",
                "operationId": "70e9f854233497e82eebf2c5b5be4f0d",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of top groups to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Top groups retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Top groups retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admins/users": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get all users for admin management",
                "operationId": "369814ee86446995986ac1dc9337b687",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of users per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for name or email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "users": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 1250
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 63
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/sign-up-email-validation": {
            "post": {
                "tags": [
                    "onboarding"
                ],
                "summary": "Sign up email validation",
                "operationId": "c14c76b0ee25dcc8753867e21f5fd8d3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "firstName",
                                    "lastName"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "example": "https://example.com/avatar.jpg"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "https://example.com"
                                    },
                                    "socials": {
                                        "type": "object",
                                        "example": {
                                            "linkedin": "https://linkedin.com/in/johndoe"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "An otp send to your mail please check and verify",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An otp send to your mail please check and verify"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already exists with this email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User already exists with this email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/auth/otp-verification": {
            "post": {
                "tags": [
                    "onboarding"
                ],
                "summary": "Verify OTP",
                "operationId": "73532d6a3467348d1021f3d5f82c8d8f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "otp"
                                ],
                                "properties": {
                                    "otp": {
                                        "type": "string",
                                        "example": "1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified. You may now set your password.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP verified. You may now set your password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/auth/resend-otp": {
            "post": {
                "tags": [
                    "onboarding"
                ],
                "summary": "Resend OTP",
                "operationId": "6df6cdd1498709af94fae0a053ab5b22",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "An OTP send to your email please check and verify.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An OTP send to your email please check and verify."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/auth/google-auth": {
            "get": {
                "tags": [
                    "onboarding"
                ],
                "summary": "Google authentication",
                "operationId": "9c50fb733f5d94f704f95fc4da250f95",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to Google OAuth"
                    }
                }
            }
        },
        "/auth/user-create": {
            "post": {
                "tags": [
                    "onboarding"
                ],
                "summary": "Create user after OTP verification",
                "operationId": "3afbd35d2e6451f7094f779d811d8d2c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password",
                                    "confirmPassword",
                                    "email"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Password123!"
                                    },
                                    "confirmPassword": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Password123!"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration successful. You may now log in.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful. You may now log in."
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "OTP verification required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP verification required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "onboarding"
                ],
                "summary": "User login",
                "operationId": "99d66635c4992aeaa6aa44ff653d0563",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Password123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successfully"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "tags": [
                    "onboarding"
                ],
                "summary": "Reset password request",
                "operationId": "b8d03d5b689dcb65d3771f62d4f90a24",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A link has been sent to your email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A link has been sent to your email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not exist with this email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not exist with this email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/auth/verify-reset-password": {
            "post": {
                "tags": [
                    "onboarding"
                ],
                "summary": "Verify reset password",
                "operationId": "42dfcbdc569c266c9c36462d877bf2d3",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password",
                                    "confirmPassword"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "NewPassword123!"
                                    },
                                    "confirmPassword": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "NewPassword123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Your password has been reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your password has been reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your token has expired. Please request a new one.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your token has expired. Please request a new one."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/auth/direct-login": {
            "post": {
                "tags": [
                    "onboarding"
                ],
                "summary": "Direct login",
                "operationId": "0035ef5181c6a7f1df0f22330ed69edb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "firstName",
                                    "lastName"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "groupId": {
                                        "type": "string",
                                        "example": "uuid",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successfully"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/auth/direct-login-contact": {
            "post": {
                "tags": [
                    "onboarding"
                ],
                "summary": "Direct login via contact",
                "operationId": "84f366a00091c34bed9d6043ab8d1ff9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "firstName",
                                    "lastName"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "sharedContactId": {
                                        "type": "string",
                                        "example": "uuid",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successfully"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/auth/restore-account": {
            "put": {
                "tags": [
                    "onboarding"
                ],
                "summary": "Restore account",
                "operationId": "a35b3373a2d1e3356fdb68ee6091df6d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Password123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successfully"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/cities/import": {
            "post": {
                "tags": [
                    "cities"
                ],
                "summary": "Import cities (cache for geocoding)",
                "operationId": "29a61f4242848ceede5026e8615b62f0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "example": "https://api.staging.netwrk.vip/api/cities"
                                    },
                                    "bearer": {
                                        "type": "string",
                                        "example": "<token>"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Imported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cities imported"
                                        },
                                        "data": {
                                            "properties": {
                                                "created": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "updated": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "skipped": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contacts": {
            "get": {
                "tags": [
                    "contacts"
                ],
                "summary": "Get contacts list",
                "operationId": "7f32c9bebdb674b0eba4c5e1d92b4fcd",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at:desc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "totalRecords": {
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "totalPages": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "currentPage": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "count": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "data": {
                                            "properties": {
                                                "contacts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/contacts/indirect-contacts": {
            "get": {
                "tags": [
                    "contacts"
                ],
                "summary": "Get indirect contacts count",
                "operationId": "0eefa50c9588302c3eb321752fdb42e9",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Indirect contacts fetched successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "indirectContacts": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/contacts/graph/{year}": {
            "get": {
                "tags": [
                    "contacts"
                ],
                "summary": "Get contacts growth chart data",
                "operationId": "ea309f85e577718123f62c7d46e027d2",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2025
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "properties": {
                                                "comulativeData": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string",
                                                                "example": "January"
                                                            },
                                                            "contacts_joined": {
                                                                "type": "integer",
                                                                "example": 0
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/contacts/create-contact": {
            "post": {
                "tags": [
                    "contacts"
                ],
                "summary": "Create a new contact",
                "operationId": "5da87f325fba1ee1f3de00b049d8cb26",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstName",
                                    "lastName"
                                ],
                                "properties": {
                                    "firstName": {
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "position": {
                                        "type": "string"
                                    },
                                    "company": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "industries": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "socials": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Contact created successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/contacts/get-contact/{contactId}": {
            "get": {
                "tags": [
                    "contacts"
                ],
                "summary": "Get a single contact",
                "operationId": "ef0e4e567368de1e7f809dc4acea15e2",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Contact not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/contacts/update-contact/{contactId}": {
            "patch": {
                "tags": [
                    "contacts"
                ],
                "summary": "Update a contact",
                "operationId": "b589c57adf9214e8bc20c167e3567cd8",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "firstName": {
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "position": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact updated successfully"
                    },
                    "404": {
                        "description": "Contact not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/contacts/delete": {
            "post": {
                "tags": [
                    "contacts"
                ],
                "summary": "Delete contacts",
                "operationId": "558fdc1e3b774b7e64e38c17d4abbbab",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "recordIds"
                                ],
                                "properties": {
                                    "recordIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contacts deleted successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/contacts/import-csv": {
            "post": {
                "tags": [
                    "contacts"
                ],
                "summary": "Import contacts from CSV",
                "operationId": "ba1eea2747330d1f6d1716b139c8203a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "CSV file to import",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "CSV imported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Import completed"
                                        },
                                        "totalRecords": {
                                            "type": "integer",
                                            "example": 42
                                        },
                                        "data": {
                                            "properties": {
                                                "summary": {
                                                    "properties": {
                                                        "totalRows": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "created": {
                                                            "type": "integer",
                                                            "example": 8
                                                        },
                                                        "skipped": {
                                                            "type": "integer",
                                                            "example": 2
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "results": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/contacts/import-csv-bulk": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Import contacts from CSV file (Bulk Optimized)",
                "description": "Import contacts from CSV file using bulk operations for better performance with large datasets",
                "operationId": "importCsvBulk",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "CSV file to import",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Import completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bulk import completed"
                                        },
                                        "totalRecords": {
                                            "type": "integer",
                                            "example": 1000
                                        },
                                        "data": {
                                            "properties": {
                                                "summary": {
                                                    "properties": {
                                                        "totalRows": {
                                                            "type": "integer",
                                                            "example": 1000
                                                        },
                                                        "created": {
                                                            "type": "integer",
                                                            "example": 950
                                                        },
                                                        "skipped": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "processingTime": {
                                                            "type": "string",
                                                            "example": "2.5s"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/contacts/import-csv-copy": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Import contacts from CSV file (PostgreSQL COPY Optimized)",
                "description": "Import contacts using PostgreSQL COPY command with temporary table and ON CONFLICT upsert for maximum performance. CSV must have headers: user_id, first_name, last_name, email, position, company_name, phone, work_phone, home_phone, address, additional_addresses, city, latitude, longitude, timezone, birthday, notes, tags, industries, socials, title, role, website_url",
                "operationId": "importCsvCopy",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "CSV file to import",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Import completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "COPY import completed"
                                        },
                                        "totalRecords": {
                                            "type": "integer",
                                            "example": 10000
                                        },
                                        "data": {
                                            "properties": {
                                                "summary": {
                                                    "properties": {
                                                        "totalRows": {
                                                            "type": "integer",
                                                            "example": 10000
                                                        },
                                                        "created": {
                                                            "type": "integer",
                                                            "example": 9500
                                                        },
                                                        "updated": {
                                                            "type": "integer",
                                                            "example": 500
                                                        },
                                                        "processingTime": {
                                                            "type": "string",
                                                            "example": "1.2s"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/contacts/geocode-pending": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Start geocoding for contacts without coordinates",
                "description": "Manually dispatch geocoding job for contacts that need coordinates",
                "operationId": "geocodePendingContacts",
                "responses": {
                    "200": {
                        "description": "Geocoding job dispatched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Geocoding job dispatched"
                                        },
                                        "data": {
                                            "properties": {
                                                "contactsNeedingGeocoding": {
                                                    "type": "integer",
                                                    "example": 150
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/contacts/geocoding-status": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get geocoding status for user contacts",
                "description": "Check how many contacts need geocoding and their status",
                "operationId": "getGeocodingStatus",
                "responses": {
                    "200": {
                        "description": "Geocoding status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "totalContacts": {
                                                    "type": "integer",
                                                    "example": 1000
                                                },
                                                "contactsWithCoordinates": {
                                                    "type": "integer",
                                                    "example": 850
                                                },
                                                "contactsNeedingGeocoding": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "geocodingProgress": {
                                                    "type": "string",
                                                    "example": "85%"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/groups/find-users-groups": {
            "get": {
                "tags": [
                    "groups"
                ],
                "summary": "Get user's groups",
                "operationId": "95ec2f3a75f890a59e6b2a213ab5d8aa",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 5
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "properties": {
                                                "groups": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/groups/group-list": {
            "get": {
                "tags": [
                    "groups"
                ],
                "summary": "Get groups list",
                "operationId": "dfe8928198d4a5a39423a99721561d73",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/groups/create-group": {
            "post": {
                "tags": [
                    "groups"
                ],
                "summary": "Create a new group",
                "operationId": "300c6af5c028bb80c64294546f48a39c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Marketing Team"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Marketing department group"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Group created successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/upload": {
            "post": {
                "tags": [
                    "upload"
                ],
                "summary": "Upload a file to S3",
                "operationId": "9795124f6acf6befebd02b4376d24e97",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "File to upload",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "folder": {
                                        "description": "Folder to upload to (optional, defaults to 'uploads')",
                                        "type": "string",
                                        "example": "avatars"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "File uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "example": "https://bucket.s3.amazonaws.com/uploads/file.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid file upload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No file provided"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The file field is required"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/upload/multiple": {
            "post": {
                "tags": [
                    "upload"
                ],
                "summary": "Upload multiple files to S3",
                "operationId": "9256f78f3d1bec5d802ab3e54b260155",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "files[]": {
                                        "description": "Files to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "folder": {
                                        "description": "Folder to upload to (optional, defaults to 'uploads')",
                                        "type": "string",
                                        "example": "documents"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Files uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Files uploaded successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_files": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "successful_uploads": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "failed_uploads": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "uploaded": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/upload/delete": {
            "delete": {
                "tags": [
                    "upload"
                ],
                "summary": "Delete a file from S3",
                "operationId": "ff0b2a4b6bbe193a7e7fbf354c34ac3d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "url": {
                                        "description": "S3 URL of the file to delete",
                                        "type": "string",
                                        "example": "https://bucket.s3.amazonaws.com/uploads/file.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "File deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "File deleted successfully"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to delete file",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete file"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/upload/presigned-url": {
            "post": {
                "tags": [
                    "upload"
                ],
                "summary": "Generate a presigned URL for direct upload",
                "operationId": "b6c2cda865969173ed18ff664bf83890",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "filename": {
                                        "description": "Original filename",
                                        "type": "string",
                                        "example": "document.pdf"
                                    },
                                    "folder": {
                                        "description": "Folder to upload to (optional, defaults to 'uploads')",
                                        "type": "string",
                                        "example": "documents"
                                    },
                                    "expiration": {
                                        "description": "URL expiration time in seconds (optional, defaults to 3600)",
                                        "type": "integer",
                                        "example": 3600
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Presigned URL generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Presigned URL generated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "presigned_url": {
                                                    "type": "string",
                                                    "example": "https://bucket.s3.amazonaws.com/uploads/file.jpg?signature=..."
                                                },
                                                "file_path": {
                                                    "type": "string",
                                                    "example": "uploads/uuid-filename.jpg"
                                                },
                                                "filename": {
                                                    "type": "string",
                                                    "example": "uuid-filename.jpg"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "example": "2024-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/upload/file-info": {
            "get": {
                "tags": [
                    "upload"
                ],
                "summary": "Get file information from S3 URL",
                "operationId": "361d0b61f8dc3eff640905924048c100",
                "parameters": [
                    {
                        "name": "url",
                        "in": "query",
                        "description": "S3 URL of the file",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "File information retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "exists": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "uploads/file.jpg"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "example": "https://bucket.s3.amazonaws.com/uploads/file.jpg"
                                                },
                                                "size": {
                                                    "type": "integer",
                                                    "example": 1024
                                                },
                                                "last_modified": {
                                                    "type": "integer",
                                                    "example": 1640995200
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "File not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/graph/contact-industry": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get user contact industries graph data",
                "operationId": "2c2e1e4736b74027f0ab9e1ec9813fe6",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/users/delete": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Delete users",
                "operationId": "c52083299b297da3f9693d517c58a417",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "recordIds"
                                ],
                                "properties": {
                                    "recordIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/users/delete/secondary-profile": {
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Delete secondary profile",
                "operationId": "654219a5c7485202880c8310f35961b7",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Secondary profile not found"
                    }
                }
            }
        },
        "/users/update-profile": {
            "patch": {
                "tags": [
                    "users"
                ],
                "summary": "Update user profile",
                "operationId": "72c6706416f12794813b3ed1f4224d5c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "example": "Tech Corp"
                                    },
                                    "position": {
                                        "type": "string",
                                        "example": "Software Engineer"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "New York, USA"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "Full stack developer"
                                    },
                                    "industries": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "socials": {
                                        "type": "object"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "example": "https://example.com/avatar.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/users/secondry-profile": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create secondary profile",
                "operationId": "1670d61d53709b3c9bc3d0c98779d2e1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "firstName",
                                    "lastName"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.secondary@example.com"
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "Smith"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "example": "https://example.com/avatar.jpg"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "https://example.com"
                                    },
                                    "socials": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/users/socials-preferences": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Update user social preferences",
                "operationId": "6befe5b361f6c0dc4dbf13ea040255e1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "socials_preference"
                                ],
                                "properties": {
                                    "socials_preference": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "linkedin",
                                                "instagram",
                                                "x",
                                                "facebook",
                                                "twitter"
                                            ]
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/users/me": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get current user profile",
                "operationId": "93b9d43bf6cc5193f51ebeb8863d054d",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/users/dashboard": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get User Dashboard Data",
                "operationId": "b3036bfa69fccfb1142472e5c4d9a3fd",
                "responses": {
                    "200": {
                        "description": "Dashboard data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "properties": {
                                                "contactsCount": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "sentReferralsCount": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "receivedReferralsCount": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "groupsCreatedCount": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/users/dashboard/graph/location": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get User Dashboard Contact Location Graph Data",
                "operationId": "55ce288de8be48a7206af5ef89005fb9",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "properties": {
                                                "cityData": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "contacts": {
                                                    "properties": {
                                                        "paginatedData": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "totalRecords": {
                                                            "type": "integer"
                                                        },
                                                        "page": {
                                                            "type": "integer"
                                                        },
                                                        "limit": {
                                                            "type": "integer"
                                                        },
                                                        "totalPages": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/users/industries": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get industries list",
                "operationId": "3ef069edb4f74303c7e58e71fe93c6d3",
                "responses": {
                    "200": {
                        "description": "Industries retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "admin",
            "description": "Admin endpoints"
        },
        {
            "name": "onboarding",
            "description": "Authentication and onboarding endpoints"
        },
        {
            "name": "contacts",
            "description": "Contact management endpoints"
        },
        {
            "name": "groups",
            "description": "Group management endpoints"
        },
        {
            "name": "upload",
            "description": "File upload endpoints"
        },
        {
            "name": "users",
            "description": "User management endpoints"
        },
        {
            "name": "cities",
            "description": "cities"
        },
        {
            "name": "Contacts",
            "description": "Contacts"
        }
    ]
}